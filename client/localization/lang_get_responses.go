// Code generated by go-swagger; DO NOT EDIT.

package localization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/UNO-SOFT/mantis-rest/models"
)

// LangGetReader is a Reader for the LangGet structure.
type LangGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LangGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLangGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewLangGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewLangGetServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewLangGetOK creates a LangGetOK with default headers values
func NewLangGetOK() *LangGetOK {
	return &LangGetOK{}
}

/*
LangGetOK describes a response with status code 200, with default header values.

Success
*/
type LangGetOK struct {
	Payload *models.LangGetResponse
}

// IsSuccess returns true when this lang get o k response has a 2xx status code
func (o *LangGetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this lang get o k response has a 3xx status code
func (o *LangGetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this lang get o k response has a 4xx status code
func (o *LangGetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this lang get o k response has a 5xx status code
func (o *LangGetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this lang get o k response a status code equal to that given
func (o *LangGetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the lang get o k response
func (o *LangGetOK) Code() int {
	return 200
}

func (o *LangGetOK) Error() string {
	return fmt.Sprintf("[GET /lang][%d] langGetOK  %+v", 200, o.Payload)
}

func (o *LangGetOK) String() string {
	return fmt.Sprintf("[GET /lang][%d] langGetOK  %+v", 200, o.Payload)
}

func (o *LangGetOK) GetPayload() *models.LangGetResponse {
	return o.Payload
}

func (o *LangGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LangGetResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLangGetForbidden creates a LangGetForbidden with default headers values
func NewLangGetForbidden() *LangGetForbidden {
	return &LangGetForbidden{}
}

/*
LangGetForbidden describes a response with status code 403, with default header values.

Access denied
*/
type LangGetForbidden struct {
}

// IsSuccess returns true when this lang get forbidden response has a 2xx status code
func (o *LangGetForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this lang get forbidden response has a 3xx status code
func (o *LangGetForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this lang get forbidden response has a 4xx status code
func (o *LangGetForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this lang get forbidden response has a 5xx status code
func (o *LangGetForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this lang get forbidden response a status code equal to that given
func (o *LangGetForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the lang get forbidden response
func (o *LangGetForbidden) Code() int {
	return 403
}

func (o *LangGetForbidden) Error() string {
	return fmt.Sprintf("[GET /lang][%d] langGetForbidden ", 403)
}

func (o *LangGetForbidden) String() string {
	return fmt.Sprintf("[GET /lang][%d] langGetForbidden ", 403)
}

func (o *LangGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLangGetServiceUnavailable creates a LangGetServiceUnavailable with default headers values
func NewLangGetServiceUnavailable() *LangGetServiceUnavailable {
	return &LangGetServiceUnavailable{}
}

/*
LangGetServiceUnavailable describes a response with status code 503, with default header values.

Mantis Offline
*/
type LangGetServiceUnavailable struct {
}

// IsSuccess returns true when this lang get service unavailable response has a 2xx status code
func (o *LangGetServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this lang get service unavailable response has a 3xx status code
func (o *LangGetServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this lang get service unavailable response has a 4xx status code
func (o *LangGetServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this lang get service unavailable response has a 5xx status code
func (o *LangGetServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this lang get service unavailable response a status code equal to that given
func (o *LangGetServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

// Code gets the status code for the lang get service unavailable response
func (o *LangGetServiceUnavailable) Code() int {
	return 503
}

func (o *LangGetServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /lang][%d] langGetServiceUnavailable ", 503)
}

func (o *LangGetServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /lang][%d] langGetServiceUnavailable ", 503)
}

func (o *LangGetServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
