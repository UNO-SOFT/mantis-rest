// Code generated by go-swagger; DO NOT EDIT.

package issues

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewIssueNoteGetParams creates a new IssueNoteGetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewIssueNoteGetParams() *IssueNoteGetParams {
	return &IssueNoteGetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewIssueNoteGetParamsWithTimeout creates a new IssueNoteGetParams object
// with the ability to set a timeout on a request.
func NewIssueNoteGetParamsWithTimeout(timeout time.Duration) *IssueNoteGetParams {
	return &IssueNoteGetParams{
		timeout: timeout,
	}
}

// NewIssueNoteGetParamsWithContext creates a new IssueNoteGetParams object
// with the ability to set a context for a request.
func NewIssueNoteGetParamsWithContext(ctx context.Context) *IssueNoteGetParams {
	return &IssueNoteGetParams{
		Context: ctx,
	}
}

// NewIssueNoteGetParamsWithHTTPClient creates a new IssueNoteGetParams object
// with the ability to set a custom HTTPClient for a request.
func NewIssueNoteGetParamsWithHTTPClient(client *http.Client) *IssueNoteGetParams {
	return &IssueNoteGetParams{
		HTTPClient: client,
	}
}

/*
IssueNoteGetParams contains all the parameters to send to the API endpoint

	for the issue note get operation.

	Typically these are written to a http.Request.
*/
type IssueNoteGetParams struct {

	/* ID.

	   The issue id.

	   Format: int64
	*/
	ID int64

	/* NoteID.

	   The note id.

	   Format: int64
	*/
	NoteID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the issue note get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *IssueNoteGetParams) WithDefaults() *IssueNoteGetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the issue note get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *IssueNoteGetParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the issue note get params
func (o *IssueNoteGetParams) WithTimeout(timeout time.Duration) *IssueNoteGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the issue note get params
func (o *IssueNoteGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the issue note get params
func (o *IssueNoteGetParams) WithContext(ctx context.Context) *IssueNoteGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the issue note get params
func (o *IssueNoteGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the issue note get params
func (o *IssueNoteGetParams) WithHTTPClient(client *http.Client) *IssueNoteGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the issue note get params
func (o *IssueNoteGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the issue note get params
func (o *IssueNoteGetParams) WithID(id int64) *IssueNoteGetParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the issue note get params
func (o *IssueNoteGetParams) SetID(id int64) {
	o.ID = id
}

// WithNoteID adds the noteID to the issue note get params
func (o *IssueNoteGetParams) WithNoteID(noteID int64) *IssueNoteGetParams {
	o.SetNoteID(noteID)
	return o
}

// SetNoteID adds the noteId to the issue note get params
func (o *IssueNoteGetParams) SetNoteID(noteID int64) {
	o.NoteID = noteID
}

// WriteToRequest writes these params to a swagger request
func (o *IssueNoteGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param id
	qrID := o.ID
	qID := swag.FormatInt64(qrID)
	if qID != "" {

		if err := r.SetQueryParam("id", qID); err != nil {
			return err
		}
	}

	// query param note_id
	qrNoteID := o.NoteID
	qNoteID := swag.FormatInt64(qrNoteID)
	if qNoteID != "" {

		if err := r.SetQueryParam("note_id", qNoteID); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
