// Code generated by go-swagger; DO NOT EDIT.

package issues

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// IssueAddReader is a Reader for the IssueAdd structure.
type IssueAddReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IssueAddReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewIssueAddCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewIssueAddForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewIssueAddServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewIssueAddCreated creates a IssueAddCreated with default headers values
func NewIssueAddCreated() *IssueAddCreated {
	return &IssueAddCreated{}
}

/*IssueAddCreated handles this case with default header values.

Issue successfully created
*/
type IssueAddCreated struct {
}

func (o *IssueAddCreated) Error() string {
	return fmt.Sprintf("[POST /issues][%d] issueAddCreated ", 201)
}

func (o *IssueAddCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewIssueAddForbidden creates a IssueAddForbidden with default headers values
func NewIssueAddForbidden() *IssueAddForbidden {
	return &IssueAddForbidden{}
}

/*IssueAddForbidden handles this case with default header values.

Access denied
*/
type IssueAddForbidden struct {
}

func (o *IssueAddForbidden) Error() string {
	return fmt.Sprintf("[POST /issues][%d] issueAddForbidden ", 403)
}

func (o *IssueAddForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewIssueAddServiceUnavailable creates a IssueAddServiceUnavailable with default headers values
func NewIssueAddServiceUnavailable() *IssueAddServiceUnavailable {
	return &IssueAddServiceUnavailable{}
}

/*IssueAddServiceUnavailable handles this case with default header values.

Mantis Offline
*/
type IssueAddServiceUnavailable struct {
}

func (o *IssueAddServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /issues][%d] issueAddServiceUnavailable ", 503)
}

func (o *IssueAddServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
