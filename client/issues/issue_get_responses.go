// Code generated by go-swagger; DO NOT EDIT.

package issues

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/UNO-SOFT/mantis-rest/models"
)

// IssueGetReader is a Reader for the IssueGet structure.
type IssueGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IssueGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewIssueGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewIssueGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewIssueGetServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewIssueGetOK creates a IssueGetOK with default headers values
func NewIssueGetOK() *IssueGetOK {
	return &IssueGetOK{}
}

/*IssueGetOK handles this case with default header values.

Success with issue details
*/
type IssueGetOK struct {
	Payload *models.CreateIssueResponse
}

func (o *IssueGetOK) Error() string {
	return fmt.Sprintf("[GET /issues][%d] issueGetOK  %+v", 200, o.Payload)
}

func (o *IssueGetOK) GetPayload() *models.CreateIssueResponse {
	return o.Payload
}

func (o *IssueGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CreateIssueResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIssueGetForbidden creates a IssueGetForbidden with default headers values
func NewIssueGetForbidden() *IssueGetForbidden {
	return &IssueGetForbidden{}
}

/*IssueGetForbidden handles this case with default header values.

Access denied
*/
type IssueGetForbidden struct {
}

func (o *IssueGetForbidden) Error() string {
	return fmt.Sprintf("[GET /issues][%d] issueGetForbidden ", 403)
}

func (o *IssueGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewIssueGetServiceUnavailable creates a IssueGetServiceUnavailable with default headers values
func NewIssueGetServiceUnavailable() *IssueGetServiceUnavailable {
	return &IssueGetServiceUnavailable{}
}

/*IssueGetServiceUnavailable handles this case with default header values.

Mantis Offline
*/
type IssueGetServiceUnavailable struct {
}

func (o *IssueGetServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /issues][%d] issueGetServiceUnavailable ", 503)
}

func (o *IssueGetServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
