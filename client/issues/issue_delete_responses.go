// Code generated by go-swagger; DO NOT EDIT.

package issues

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// IssueDeleteReader is a Reader for the IssueDelete structure.
type IssueDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IssueDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewIssueDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewIssueDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewIssueDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewIssueDeleteServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewIssueDeleteNoContent creates a IssueDeleteNoContent with default headers values
func NewIssueDeleteNoContent() *IssueDeleteNoContent {
	return &IssueDeleteNoContent{}
}

/*IssueDeleteNoContent handles this case with default header values.

Issue deleted successfully
*/
type IssueDeleteNoContent struct {
}

func (o *IssueDeleteNoContent) Error() string {
	return fmt.Sprintf("[DELETE /issues][%d] issueDeleteNoContent ", 204)
}

func (o *IssueDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewIssueDeleteForbidden creates a IssueDeleteForbidden with default headers values
func NewIssueDeleteForbidden() *IssueDeleteForbidden {
	return &IssueDeleteForbidden{}
}

/*IssueDeleteForbidden handles this case with default header values.

Access denied
*/
type IssueDeleteForbidden struct {
}

func (o *IssueDeleteForbidden) Error() string {
	return fmt.Sprintf("[DELETE /issues][%d] issueDeleteForbidden ", 403)
}

func (o *IssueDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewIssueDeleteNotFound creates a IssueDeleteNotFound with default headers values
func NewIssueDeleteNotFound() *IssueDeleteNotFound {
	return &IssueDeleteNotFound{}
}

/*IssueDeleteNotFound handles this case with default header values.

Issue doesn't exist
*/
type IssueDeleteNotFound struct {
}

func (o *IssueDeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /issues][%d] issueDeleteNotFound ", 404)
}

func (o *IssueDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewIssueDeleteServiceUnavailable creates a IssueDeleteServiceUnavailable with default headers values
func NewIssueDeleteServiceUnavailable() *IssueDeleteServiceUnavailable {
	return &IssueDeleteServiceUnavailable{}
}

/*IssueDeleteServiceUnavailable handles this case with default header values.

Mantis Offline
*/
type IssueDeleteServiceUnavailable struct {
}

func (o *IssueDeleteServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /issues][%d] issueDeleteServiceUnavailable ", 503)
}

func (o *IssueDeleteServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
