// Code generated by go-swagger; DO NOT EDIT.

package config

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/UNO-SOFT/mantis-rest/models"
)

// ConfigGetReader is a Reader for the ConfigGet structure.
type ConfigGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ConfigGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewConfigGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewConfigGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewConfigGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewConfigGetServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewConfigGetOK creates a ConfigGetOK with default headers values
func NewConfigGetOK() *ConfigGetOK {
	return &ConfigGetOK{}
}

/*ConfigGetOK handles this case with default header values.

Success
*/
type ConfigGetOK struct {
	Payload *models.ConfigGetResponse
}

func (o *ConfigGetOK) Error() string {
	return fmt.Sprintf("[GET /config][%d] configGetOK  %+v", 200, o.Payload)
}

func (o *ConfigGetOK) GetPayload() *models.ConfigGetResponse {
	return o.Payload
}

func (o *ConfigGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConfigGetResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConfigGetForbidden creates a ConfigGetForbidden with default headers values
func NewConfigGetForbidden() *ConfigGetForbidden {
	return &ConfigGetForbidden{}
}

/*ConfigGetForbidden handles this case with default header values.

Access denied
*/
type ConfigGetForbidden struct {
}

func (o *ConfigGetForbidden) Error() string {
	return fmt.Sprintf("[GET /config][%d] configGetForbidden ", 403)
}

func (o *ConfigGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewConfigGetNotFound creates a ConfigGetNotFound with default headers values
func NewConfigGetNotFound() *ConfigGetNotFound {
	return &ConfigGetNotFound{}
}

/*ConfigGetNotFound handles this case with default header values.

User or Project not found
*/
type ConfigGetNotFound struct {
}

func (o *ConfigGetNotFound) Error() string {
	return fmt.Sprintf("[GET /config][%d] configGetNotFound ", 404)
}

func (o *ConfigGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewConfigGetServiceUnavailable creates a ConfigGetServiceUnavailable with default headers values
func NewConfigGetServiceUnavailable() *ConfigGetServiceUnavailable {
	return &ConfigGetServiceUnavailable{}
}

/*ConfigGetServiceUnavailable handles this case with default header values.

Mantis Offline
*/
type ConfigGetServiceUnavailable struct {
}

func (o *ConfigGetServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /config][%d] configGetServiceUnavailable ", 503)
}

func (o *ConfigGetServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
